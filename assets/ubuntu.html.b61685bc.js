import{_ as e,o,c as s,a as t}from"./app.dad05bb1.js";const d={},c=t(`<h2 id="升级系统" tabindex="-1"><a class="header-anchor" href="#升级系统" aria-hidden="true">#</a> 升级系统</h2><p><code>sudo apt-get update &amp;&amp; sudo apt-get upgrade</code></p><p>或者</p><p><code>sudo apt-get update &amp;&amp; sudo apt-get dist-upgrade</code></p><p>升级版本update-manager</p><p>定时执行任务</p><p><code>crontab -e</code></p><p>1.开始ssh服务</p><p><code>sudo ps -e | grep ssh（查看ssh服务是否开启）</code></p><p><code>sudo apt-get install openssh-client（安装ssh客户端程序）</code></p><p><code>sudo apt-get install openssh-server（安装ssh服务端程序）</code></p><p><code>sudo systemctl start ssh（打开服务）</code></p><p><code>sudo systemctl enable ssh（设置服务的开机自启动）</code></p><p>2.设置开机自动启动</p><p><code>systemctl命令是系统服务管理器指令，它实际上将 service 和 chkconfig 这两个命令组合到一起。</code></p><p><code>设置服务的开机自启动:sudo systemctl enable ssh</code></p><p><code>打开服务:sudo systemctl start foobar</code><code>关闭服务:sudo systemctl stop foobar</code><code>重启服务:sudo systemctl restart foobar</code><code>不中断正常功能下重新加载服务:sudo systemctl reload foobar</code><code>设置服务的开机自启动:sudo systemctl enable foobar</code><code>关闭服务的开机自启动:sudo systemctl disable foobar</code><code>查看活跃的单元:systemctl list-units</code><code>查看某个服务的状态:systemctl status foobar</code><code>查看已启动的服务列表： systemctl list-unit-files|grep enabled</code><code>查看启动失败的服务列表：systemctl --failed</code></p><p>3.onlyoffice 安装</p><p><code>sudo docker run -i -t -d -p 80:80 onlyoffice/documentserver</code></p><p>4.ssl 安装</p><p>docker pull registry:2</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># 创建ssl相关目录
mkdir ~/certs
# 生成ssl密钥
openssl req -newkey rsa:2048 -nodes -sha256 -keyout certs/test.registry.com.key -x509 -days 365 -out certs/test.registry.com.crt
复制代码
# 创建registry登陆用户文件夹
mkdir ~/auth
# 创建private用户
docker run --entrypoint htpasswd registry:2 -Bbn admin admin &gt; ~/auth/htpasswd
# 删除运行的容器
docker stop [CONTAINER ID]
docker rm [CONTAINER ID]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="部署collabora-office-http" tabindex="-1"><a class="header-anchor" href="#部署collabora-office-http" aria-hidden="true">#</a> 部署Collabora Office（http）</h2><p>参考：https://www.jianshu.com/p/4082f998a05b</p><p><code>docker pull collabora/code</code></p><p>2、运行collabora镜像</p><p><code>docker run -t -d -p 0.0.0.0:9980:9980 -e &#39;domain=192\\\\.168\\\\.1\\\\.110|192\\\\.168\\\\.33\\\\.145&#39; -e &quot;username=admin&quot; -e &quot;password=123456&quot; --restart always --cap-add MKNOD collabora/code</code></p><p>说明：</p><p>镜像端口9980映射到宿主主机9980</p><p>添加两台信任主机192.168.1.110、192.168.33.145</p><p>为collabora创建用户admin，密码123456</p><p>*<strong>注意：*</strong></p><p>*<strong>后台运行，需耐心等待，可通过cpu利用率观察*</strong></p><p>3、collabora登录测试（https）</p><p>https://192.168.33.145:9980/loleaflet/dist/admin/adminSettings.html，显示输入用户名、密码</p><p>4、修改loolwsd.xml</p><p>查看collabora容器id：docker ps</p><p>进入collabora容器：docker exec -it &lt;容器id&gt; /bin/bash</p><p>编辑文件/etc/loolwsd/loolwsd.xml中ssl的值为false，如下</p><blockquote><p><code>&lt;ssl desc=&quot;SSL settings&quot;&gt;</code></p><p>​ <code>&lt;enable type=&quot;bool&quot; default=&quot;true&quot;&gt;false&lt;/enable&gt;</code></p></blockquote><p>重启collabora容器：docker restart &lt;容器id&gt;</p><p>5、collabora登录测试（http）</p><p>http://192.168.33.145:9980/loleaflet/dist/admin/adminSettings.html，显示输入用户名、密码</p><p>6、nextcloud连接collabora</p><p>启动collabora插件，设置中输入collabora地址http://192.168.33.145:9980</p><p>说明：nextcloud登录方式本身是http</p><p>[<img src="https://common.cnblogs.com/images/copycode.gif" alt="复制代码">](javascript:void(0)😉</p>`,47),a=[c];function l(p,r){return o(),s("div",null,a)}const i=e(d,[["render",l],["__file","ubuntu.html.vue"]]);export{i as default};
